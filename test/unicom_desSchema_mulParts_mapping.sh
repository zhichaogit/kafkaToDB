KAFKA="$KAFKA"
TOPIC1="unicom_desSchema_mulParts_mapping1"
TOPIC2="unicom_desSchema_mulParts_mapping2"
IPADDR="$IPADDR"
ZKIP="$ZKIP"
DBIP="$DBIP"
ZOOKEEPER="$ZKIP:2181"
BROKER="$BROKERIP:$BROKERPORT"
CURRENTUSER="$USER"
CURRENTUSERPS="$CURRENTUSERPS"

DESTSCHEMA1="SEABASES1"
DESTSCHEMA2="SEABASES2"
DESTSCHEMA3="SEABASES3"
TABLE="T1"
TABLEEXP="T1EXP"

PARTITION="2"
EXPECTDIR="$EXPECTDIR"
FINALRESULTPATH="$FINALRESULTPATH"
RESULTFILE1="${DESTSCHEMA1}_${TABLE}_result.log"
RESULTFILE2="${DESTSCHEMA2}_${TABLE}_result.log"
RESULTFILE3="${DESTSCHEMA3}_${TABLE}_result.log"
EXPECTFILE1="${DESTSCHEMA1}_${TABLE}_expect.log"
EXPECTFILE2="${DESTSCHEMA2}_${TABLE}_expect.log"
EXPECTFILE3="${DESTSCHEMA3}_${TABLE}_expect.log"
RESULTPATH1="$EXPECTDIR/$RESULTFILE1"
RESULTPATH2="$EXPECTDIR/$RESULTFILE2"
RESULTPATH3="$EXPECTDIR/$RESULTFILE3"
EXPECTPATH1="$EXPECTDIR/$EXPECTFILE1"
EXPECTPATH2="$EXPECTDIR/$EXPECTFILE2"
EXPECTPATH3="$EXPECTDIR/$EXPECTFILE3"

expect <<-EOF
  set timeout 300
  spawn ssh $DBUSER@$DBIP
   expect {
  "yes/no" { send "yes\r";exp_continue }
  "password:" { send "$DBPW\r";exp_continue }
  "$ " { send "\r" }
  }
  expect "$ "
  send "sqlci <<EOFsql
CREATE SCHEMA IF NOT EXISTS $DESTSCHEMA1;
CREATE SCHEMA IF NOT EXISTS $DESTSCHEMA2;
CREATE SCHEMA IF NOT EXISTS $DESTSCHEMA3;
SET SCHEMA $DESTSCHEMA1;
DROP TABLE IF EXISTS $TABLE;
CREATE TABLE $TABLE(c1 INT NOT NULL, c2 VARCHAR(10), c3 VARCHAR(10), PRIMARY KEY (c1));
DROP TABLE IF EXISTS $TABLEEXP;
CREATE TABLE $TABLEEXP(c1 INT NOT NULL, c2 VARCHAR(10), c3 VARCHAR(10), PRIMARY KEY (c1));


SET SCHEMA $DESTSCHEMA2;
DROP TABLE IF EXISTS $TABLE;
CREATE TABLE $TABLE(c1 INT NOT NULL, c2 VARCHAR(10), c3 VARCHAR(10), PRIMARY KEY (c1));
DROP TABLE IF EXISTS $TABLEEXP;
CREATE TABLE $TABLEEXP(c1 INT NOT NULL, c2 VARCHAR(10), c3 VARCHAR(10), PRIMARY KEY (c1));
INSERT INTO $TABLEEXP VALUES(13, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(14, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(15, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(16, 'ddd', '+++');



SET SCHEMA $DESTSCHEMA3;
DROP TABLE IF EXISTS $TABLE;
CREATE TABLE $TABLE(c1 INT NOT NULL, c2 VARCHAR(10), c3 VARCHAR(10), PRIMARY KEY (c1));
DROP TABLE IF EXISTS $TABLEEXP;
CREATE TABLE $TABLEEXP(c1 INT NOT NULL, c2 VARCHAR(10), c3 VARCHAR(10), PRIMARY KEY (c1));
INSERT INTO $TABLEEXP VALUES(1, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(2, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(3, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(4, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(5, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(6, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(11, 'ddd', '+++');
INSERT INTO $TABLEEXP VALUES(12, 'ddd', '+++');


EOFsql\r"
  expect "$ "
  send "exit\r"
  expect eof
EOF

DATAFILE1=/tmp/${TOPIC1}.data
DATAFILE2=/tmp/${TOPIC2}.data
CLASSPATH=""
echo "CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${DESTSCHEMA3}.${TABLE}I2018-04-02 07:59:54.085639011ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${DESTSCHEMA3}.${TABLE}I2018-04-02 07:59:54.085639021ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.085639031ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.085639041ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.085639051ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.085639061ddd2+++" > $DATAFILE1

echo "CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${DESTSCHEMA3}.${TABLE}I2018-04-02 07:59:54.0856390111ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${DESTSCHEMA3}.${TABLE}I2018-04-02 07:59:54.0856390121ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.0856390131ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.0856390141ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.0856390151ddd2+++
CRM_CUE2159140509447540000000058000191662722522,973800561000000005800019142337${TABLE}I2018-04-02 07:59:54.0856390161ddd2+++" > $DATAFILE2

existtopic1=`$KAFKA/bin/kafka-topics.sh --describe --topic $TOPIC1 --zookeeper $ZOOKEEPER`
existtopic2=`$KAFKA/bin/kafka-topics.sh --describe --topic $TOPIC2 --zookeeper $ZOOKEEPER`
if [ "x$existtopic1" != "x" ]; then
    $KAFKA/bin/kafka-topics.sh --delete --zookeeper $ZOOKEEPER --topic $TOPIC1
fi
if [ "x$existtopic2" != "x" ]; then
    $KAFKA/bin/kafka-topics.sh --delete --zookeeper $ZOOKEEPER --topic $TOPIC2
fi

$KAFKA/bin/kafka-topics.sh --create --zookeeper $ZOOKEEPER --replication-factor 1 --partitions $PARTITION --topic $TOPIC1
$KAFKA/bin/kafka-topics.sh --create --zookeeper $ZOOKEEPER --replication-factor 1 --partitions $PARTITION --topic $TOPIC2
$KAFKA/bin/kafka-topics.sh --list --zookeeper $ZOOKEEPER
$KAFKA/bin/kafka-console-producer.sh --broker-list $BROKER --topic $TOPIC1 < $DATAFILE1
$KAFKA/bin/kafka-console-producer.sh --broker-list $BROKER --topic $TOPIC2 < $DATAFILE2
#$KAFKA/bin/kafka-console-consumer.sh --zookeeper $ZOOKEEPER --topic $TOPIC --from-beginning

KAFKA_CDC="$KAFKA_CDC"
cd $KAFKA_CDC;

CONFIG="conf/unicom_desSchema_mulParts_mapping.json"
echo "$TOPDIR/template $PARTITION $BROKER $DBIP $TOPIC1 $TOPIC2 "Unicom" \"\" $DESTSCHEMA1 \"\" $DESTSCHEMA3 \"\" \"\" $TABLE $TABLE $KAFKA_CDC/$CONFIG $DESTSCHEMA1 $DESTSCHEMA2"
$TOPDIR/template $PARTITION $BROKER $DBIP $TOPIC1 $TOPIC2 "Unicom" "" $DESTSCHEMA1 "" $DESTSCHEMA3 "" "" $TABLE $TABLE $KAFKA_CDC/$CONFIG $DESTSCHEMA1 $DESTSCHEMA2

echo "./bin/KafkaCDC-server.sh --conf $CONFIG"
./bin/KafkaCDC-server.sh --conf $CONFIG

#get result file from $DBUSER
expect <<-EOF
  set timeout 300
  spawn ssh $DBUSER@$DBIP
   expect {
  "yes/no" { send "yes\r";exp_continue }
  "password:" { send "$DBPW\r";exp_continue}
  "$ " { send "\r" }
  }
  expect "$ "
  send "mkdir -p  $EXPECTDIR\r"
  expect "$ "
  send "sqlci <<EOFsql
SET SCHEMA $DESTSCHEMA1;
LOG $RESULTPATH1;
SELECT * FROM $TABLE;
log OFF;
log $EXPECTPATH1;
SELECT * FROM $TABLEEXP;
log OFF;
DROP TABLE IF EXISTS $TABLE;
DROP TABLE IF EXISTS $TABLEEXP;
SET SCHEMA $DESTSCHEMA2;
LOG $RESULTPATH2;
SELECT * FROM $TABLE;
log OFF;
log $EXPECTPATH2;
SELECT * FROM $TABLEEXP;
log OFF;
DROP TABLE IF EXISTS $TABLE;
DROP TABLE IF EXISTS $TABLEEXP;
SET SCHEMA $DESTSCHEMA3;
LOG $RESULTPATH3;
SELECT * FROM $TABLE;
log OFF;
log $EXPECTPATH3;
SELECT * FROM $TABLEEXP;
log OFF;
DROP TABLE IF EXISTS $TABLE;
DROP TABLE IF EXISTS $TABLEEXP;
EOFsql\r"
  expect "$ "
  send "sed -i \"1d\" $RESULTPATH1\r"
  send "sed -i \"1d\" $RESULTPATH2\r"
  send "sed -i \"1d\" $RESULTPATH3\r"
  send "sed -i \"1d\" $EXPECTPATH1\r"
  send "sed -i \"1d\" $EXPECTPATH2\r"
  send "sed -i \"1d\" $EXPECTPATH3\r"
  expect "$ "
  send "exit\r"
  expect eof
EOF

# clean the environment
CUREXPECTDIR="/tmp"
mkdir -p $CUREXPECTDIR
if [ -f ${CUREXPECTDIR}/${RESULTFILE1} ];then
 rm -f ${CUREXPECTDIR}/${RESULTFILE1}
echo "file exist, delete ${CUREXPECTDIR}/${RESULTFILE1}"
fi
if [ -f ${CUREXPECTDIR}/${RESULTFILE2} ];then
 rm -f ${CUREXPECTDIR}/${RESULTFILE2}
 echo "file exist, delete ${CUREXPECTDIR}/${RESULTFILE2}"
fi
if [ -f ${CUREXPECTDIR}/${RESULTFILE3} ];then
 rm -f ${CUREXPECTDIR}/${RESULTFILE3}
 echo "file exist, delete ${CUREXPECTDIR}/${RESULTFILE3}"
fi
if [ -f ${CUREXPECTDIR}/${EXPECTFILE1} ];then
 rm -f ${CUREXPECTDIR}/$EXPECTFILE1}
 echo "file exist, delete ${CUREXPECTDIR}/${EXPECTFILE1}"
fi
if [ -f ${CUREXPECTDIR}/${EXPECTFILE2} ];then
 rm -f ${CUREXPECTDIR}/$EXPECTFILE2}
 echo "file exist, delete ${CUREXPECTDIR}/${EXPECTFILE2}"
fi
if [ -f ${CUREXPECTDIR}/${EXPECTFILE3} ];then
 rm -f ${CUREXPECTDIR}/$EXPECTFILE3}
 echo "file exist, delete ${CUREXPECTDIR}/${EXPECTFILE3}"
fi
# copy result file to current host
expect <<-EOF
  set timeout 300
  spawn ssh $DBUSER@$DBIP
  expect {
  "yes/no" { send "yes\r";exp_continue }
  "password:" { send "$DBPW\r";exp_continue }
  "$ " { send "\r" }
  }
  expect "$ "
  send "scp -r $RESULTPATH1 $RESULTPATH2 $RESULTPATH3 $EXPECTPATH1 $EXPECTPATH2 $EXPECTPATH3 $CURRENTUSER@$IPADDR:$CUREXPECTDIR\r"
  expect {
  "yes/no" {send "yes\r";exp_continue }
  "password:" { send "$CURRENTUSERPS\r";exp_continue }
  "$ " { send "\r" }
  }
  expect "$ "
  send "rm -f $RESULTPATH1 $RESULTPATH2 $RESULTPATH3 $EXPECTPATH1 $EXPECTPATH2 $EXPECTPATH3\r"
  expect "$ "
  send "exit\r"
  expect eof
EOF

#result set:
RESULTPATH1="${CUREXPECTDIR}/${RESULTFILE1}"
RESULTPATH2="${CUREXPECTDIR}/${RESULTFILE2}"
RESULTPATH3="${CUREXPECTDIR}/${RESULTFILE3}"
EXPECTPATH1="${CUREXPECTDIR}/${EXPECTFILE1}"
EXPECTPATH2="${CUREXPECTDIR}/${EXPECTFILE2}"
EXPECTPATH3="${CUREXPECTDIR}/${EXPECTFILE3}"
currentTime=$(date "+%Y-%m-%d %H:%M:%S")

if [ -f $RESULTPATH1 -a -f $RESULTPATH2 -a -f $RESULTPATH3 -a -f $EXPECTPATH1 -a -f $EXPECTPATH2 -a -f $EXPECTPATH3 -a "x$(diff -q $RESULTPATH1 $EXPECTPATH1)" == "x" -a "x$(diff -q $RESULTPATH2 $EXPECTPATH2)" == "x" -a "x$(diff -q $RESULTPATH3 $EXPECTPATH3)" == "x" ];then
  echo "$currentTime $TOPIC1 $TOPIC2 expected" >> $FINALRESULTPATH
  RESULT="$currentTime $TOPIC1 $TOPIC2 success"
else
  echo "$currentTime $TOPIC1 $TOPIC2 unexpected" >> $FINALRESULTPATH
  RESULT="$currentTime $TOPIC1 $TOPIC2 failed"
fi

$KAFKA/bin/kafka-topics.sh --delete --zookeeper $ZOOKEEPER --topic $TOPIC1
$KAFKA/bin/kafka-topics.sh --delete --zookeeper $ZOOKEEPER --topic $TOPIC2
if [ "x${DEBUG}" != "xYES" ]; then
  rm -f $DATAFILE
  rm -f $RESULTPATH1
  rm -f $EXPECTPATH1
  rm -f $RESULTPATH2
  rm -f $RESULTPATH2
  rm -f $EXPECTPATH3
  rm -f $EXPECTPATH3
fi
